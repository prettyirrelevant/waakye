run:
  concurrency: 4
  deadline: 20m
  issues-exit-code: 1
  tests: false

  skip-dirs:
    - asaro
    - masa
  skip-dirs-use-default: false

linters:
  enable-all: true
  disable:
    - gomoddirectives
    - goerr113
    - forbidigo
    - nlreturn
    - prealloc
    - gci
    - wrapcheck
    - varnamelen
    - exhaustruct
    - gofumpt
    - gomnd
    - wsl
    - bodyclose
    - unparam
    - lll
    - gochecknoglobals
    - gochecknoinits
    - dupl
    - structcheck
    - golint
    - deadcode
    - maligned
    - exhaustivestruct
    - ifshort
    - interfacer
    - nosnakecase
    - scopelint
    - varcheck

output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true

linters-settings:
  errcheck:
    # report about not checking of errors in type assetions: `a := b.(MyStruct)`;
    # default is false: such cases aren't reported by default.
    check-type-assertions: false

    # report about assignment of errors to blank identifier: `num, _ := strconv.Atoi(numStr)`;
    # default is false: such cases aren't reported by default.
    check-blank: false
  govet:
    # report about shadowed variables
    check-shadowing: true
  goimports:
    local: "github.com/prettyirrelevant"
  golint:
    min-confidence: 0.8
  gofmt:
    simplify: true
  gocyclo:
    min-complexity: 15
  maligned:
    suggest-new: true
  dupl:
    threshold: 150
  goconst:
    min-len: 3
    min-occurrences: 3
  misspell:
    locale: US
  lll:
    line-length: 140
    tab-width: 1
  unused:
    # treat code as a program (not a library) and report unused exported identifiers; default is false.
    # XXX: if you enable this setting, unused will report a lot of false-positives in text editors:
    # if it's called for subdir of a project it can't find funcs usages. All text editor integrations
    # with golangci-lint call it on a directory with the changed file.
    check-exported: false
  unparam:
    # call graph construction algorithm (cha, rta). In general, use cha for libraries,
    # and rta for programs with main packages. Default is cha.
    algo: cha

    # Inspect exported functions, default is false. Set to true if no external program/library imports your code.
    # XXX: if you enable this setting, unparam will report a lot of false-positives in text editors:
    # if it's called for subdir of a project it can't find external interfaces. All text editor integrations
    # with golangci-lint call it on a directory with the changed file.
    check-exported: false
  nakedret:
    # make an issue if func has more lines of code than this setting and it has naked returns; default is 30
    max-func-lines: 30
  prealloc:
    # Report preallocation suggestions only on simple loops that have no returns/breaks/continues/gotos in them.
    # True by default.
    simple: true
    range-loops: true # Report preallocation suggestions on range loops, true by default
    for-loops: false # Report preallocation suggestions on for loops, false by default
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - unnamedResult
      - wrapperFunc
      - dupImport # https://github.com/go-critic/go-critic/issues/845
      - ifElseChain
      - octalLiteral
  funlen:
    lines: 100
    statements: 50

  depguard:
    rules:
        main:
          files:
            - $all
          allow:
            - $gostd
            - github.com/prettyirrelevant
            - github.com/spf13/cobra
            - github.com/charmbracelet/log
            - github.com/imroc/req/v3
            - github.com/briandowns/spinner
            - github.com/manifoldco/promptui

issues:
  max-per-linter: 0
  max-same: 0
  new: false
  exclude-use-default: true
